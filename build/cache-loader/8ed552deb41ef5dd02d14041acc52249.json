{"remainingRequest":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\ts-loader\\index.js??ref--10-3!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\entities\\product-category\\product-category.service.ts","dependencies":[{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\entities\\product-category\\product-category.service.ts","mtime":1537891154003},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537458166194},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1537458165585},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar ProductCategoryService = /** @class */ (function () {\r\n    function ProductCategoryService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/product-categories';\r\n    }\r\n    ProductCategoryService.prototype.create = function (productCategory) {\r\n        return this.http.post(this.resourceUrl, productCategory, { observe: 'response' });\r\n    };\r\n    ProductCategoryService.prototype.update = function (productCategory) {\r\n        return this.http.put(this.resourceUrl, productCategory, { observe: 'response' });\r\n    };\r\n    ProductCategoryService.prototype.find = function (id) {\r\n        return this.http.get(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    ProductCategoryService.prototype.query = function (req) {\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http.get(this.resourceUrl, { params: options, observe: 'response' });\r\n    };\r\n    ProductCategoryService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    ProductCategoryService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], ProductCategoryService);\r\n    return ProductCategoryService;\r\n    var _a;\r\n}());\r\nexports.ProductCategoryService = ProductCategoryService;\r\n",{"version":3,"file":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\entities\\product-category\\product-category.service.ts","sourceRoot":"","sources":["C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\entities\\product-category\\product-category.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAgE;AAGhE,mDAAmD;AACnD,qCAAiD;AAOjD;IAGI,gCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,gBAAW,GAAG,8BAAc,GAAG,wBAAwB,CAAC;IAEzB,CAAC;IAExC,uCAAM,GAAN,UAAO,eAAiC;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,IAAI,CAAC,WAAW,EAAE,eAAe,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxG,CAAC;IAED,uCAAM,GAAN,UAAO,eAAiC;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,WAAW,EAAE,eAAe,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvG,CAAC;IAED,qCAAI,GAAJ,UAAK,EAAU;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,sCAAK,GAAL,UAAM,GAAS;QACX,IAAM,OAAO,GAAG,4BAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACzG,CAAC;IAED,uCAAM,GAAN,UAAO,EAAU;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAS,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvF,CAAC;IAxBQ,sBAAsB;QADlC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAIL,iBAAU,oBAAV,iBAAU;OAH3B,sBAAsB,CAyBlC;IAAD,6BAAC;;CAAA,AAzBD,IAyBC;AAzBY,wDAAsB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared';\nimport { IProductCategory } from 'app/shared/model/product-category.model';\n\ntype EntityResponseType = HttpResponse<IProductCategory>;\ntype EntityArrayResponseType = HttpResponse<IProductCategory[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class ProductCategoryService {\n    private resourceUrl = SERVER_API_URL + 'api/product-categories';\n\n    constructor(private http: HttpClient) {}\n\n    create(productCategory: IProductCategory): Observable<EntityResponseType> {\n        return this.http.post<IProductCategory>(this.resourceUrl, productCategory, { observe: 'response' });\n    }\n\n    update(productCategory: IProductCategory): Observable<EntityResponseType> {\n        return this.http.put<IProductCategory>(this.resourceUrl, productCategory, { observe: 'response' });\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http.get<IProductCategory>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n    }\n\n    query(req?: any): Observable<EntityArrayResponseType> {\n        const options = createRequestOption(req);\n        return this.http.get<IProductCategory[]>(this.resourceUrl, { params: options, observe: 'response' });\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n    }\n}\n"]}]}