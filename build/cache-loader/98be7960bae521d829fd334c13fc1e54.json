{"remainingRequest":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\ts-loader\\index.js??ref--10-3!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\login\\login.service.ts","dependencies":[{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\login\\login.service.ts","mtime":1537891152707},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537458166194},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1537458165585},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar principal_service_1 = require(\"../auth/principal.service\");\r\nvar auth_jwt_service_1 = require(\"../auth/auth-jwt.service\");\r\nvar tracker_service_1 = require(\"../tracker/tracker.service\");\r\nvar LoginService = /** @class */ (function () {\r\n    function LoginService(languageService, principal, trackerService, authServerProvider) {\r\n        this.languageService = languageService;\r\n        this.principal = principal;\r\n        this.trackerService = trackerService;\r\n        this.authServerProvider = authServerProvider;\r\n    }\r\n    LoginService.prototype.login = function (credentials, callback) {\r\n        var _this = this;\r\n        var cb = callback || function () { };\r\n        return new Promise(function (resolve, reject) {\r\n            _this.authServerProvider.login(credentials).subscribe(function (data) {\r\n                _this.principal.identity(true).then(function (account) {\r\n                    // After the login the language will be changed to\r\n                    // the language selected by the user during his registration\r\n                    if (account !== null) {\r\n                        _this.languageService.changeLanguage(account.langKey);\r\n                    }\r\n                    _this.trackerService.sendActivity();\r\n                    resolve(data);\r\n                });\r\n                return cb();\r\n            }, function (err) {\r\n                _this.logout();\r\n                reject(err);\r\n                return cb(err);\r\n            });\r\n        });\r\n    };\r\n    LoginService.prototype.loginWithToken = function (jwt, rememberMe) {\r\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\r\n    };\r\n    LoginService.prototype.logout = function () {\r\n        this.authServerProvider.logout().subscribe();\r\n        this.principal.authenticate(null);\r\n    };\r\n    LoginService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiLanguageService !== \"undefined\" && ng_jhipster_1.JhiLanguageService) === \"function\" && _a || Object, typeof (_b = typeof principal_service_1.Principal !== \"undefined\" && principal_service_1.Principal) === \"function\" && _b || Object, typeof (_c = typeof tracker_service_1.JhiTrackerService !== \"undefined\" && tracker_service_1.JhiTrackerService) === \"function\" && _c || Object, typeof (_d = typeof auth_jwt_service_1.AuthServerProvider !== \"undefined\" && auth_jwt_service_1.AuthServerProvider) === \"function\" && _d || Object])\r\n    ], LoginService);\r\n    return LoginService;\r\n    var _a, _b, _c, _d;\r\n}());\r\nexports.LoginService = LoginService;\r\n",{"version":3,"file":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\login\\login.service.ts","sourceRoot":"","sources":["C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\login\\login.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,2CAAiD;AAEjD,+DAAsD;AACtD,6DAA8D;AAC9D,8DAA+D;AAG/D;IACI,sBACY,eAAmC,EACnC,SAAoB,EACpB,cAAiC,EACjC,kBAAsC;QAHtC,oBAAe,GAAf,eAAe,CAAoB;QACnC,cAAS,GAAT,SAAS,CAAW;QACpB,mBAAc,GAAd,cAAc,CAAmB;QACjC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC/C,CAAC;IAEJ,4BAAK,GAAL,UAAM,WAAW,EAAE,QAAS;QAA5B,iBAwBC;QAvBG,IAAM,EAAE,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAChD,UAAA,IAAI;gBACA,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;oBACtC,kDAAkD;oBAClD,4DAA4D;oBAC5D,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;wBACnB,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBACzD,CAAC;oBACD,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;oBACnC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,EAAE,EAAE,CAAC;YAChB,CAAC,EACD,UAAA,GAAG;gBACC,KAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAc,GAAd,UAAe,GAAG,EAAE,UAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IACnE,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAzCQ,YAAY;QADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAGF,gCAAkB,oBAAlB,gCAAkB,sDACxB,6BAAS,oBAAT,6BAAS,sDACJ,mCAAiB,oBAAjB,mCAAiB,sDACb,qCAAkB,oBAAlB,qCAAkB;OALzC,YAAY,CA0CxB;IAAD,mBAAC;;CAAA,AA1CD,IA0CC;AA1CY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\n\nimport { Principal } from '../auth/principal.service';\nimport { AuthServerProvider } from '../auth/auth-jwt.service';\nimport { JhiTrackerService } from '../tracker/tracker.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoginService {\n    constructor(\n        private languageService: JhiLanguageService,\n        private principal: Principal,\n        private trackerService: JhiTrackerService,\n        private authServerProvider: AuthServerProvider\n    ) {}\n\n    login(credentials, callback?) {\n        const cb = callback || function() {};\n\n        return new Promise((resolve, reject) => {\n            this.authServerProvider.login(credentials).subscribe(\n                data => {\n                    this.principal.identity(true).then(account => {\n                        // After the login the language will be changed to\n                        // the language selected by the user during his registration\n                        if (account !== null) {\n                            this.languageService.changeLanguage(account.langKey);\n                        }\n                        this.trackerService.sendActivity();\n                        resolve(data);\n                    });\n                    return cb();\n                },\n                err => {\n                    this.logout();\n                    reject(err);\n                    return cb(err);\n                }\n            );\n        });\n    }\n\n    loginWithToken(jwt, rememberMe) {\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\n    }\n\n    logout() {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    }\n}\n"]}]}