{"remainingRequest":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\ts-loader\\index.js??ref--10-3!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\tracker\\tracker.service.ts","dependencies":[{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\tracker\\tracker.service.ts","mtime":1537891152629},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1537458166194},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1537458165585},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar csrf_service_1 = require(\"../auth/csrf.service\");\r\nvar window_service_1 = require(\"./window.service\");\r\nvar auth_jwt_service_1 = require(\"../auth/auth-jwt.service\");\r\nvar SockJS = require(\"sockjs-client\");\r\nvar Stomp = require(\"webstomp-client\");\r\nvar JhiTrackerService = /** @class */ (function () {\r\n    function JhiTrackerService(router, authServerProvider, $window, \r\n    // tslint:disable-next-line: no-unused-variable\r\n    csrfService) {\r\n        this.router = router;\r\n        this.authServerProvider = authServerProvider;\r\n        this.$window = $window;\r\n        this.csrfService = csrfService;\r\n        this.stompClient = null;\r\n        this.subscriber = null;\r\n        this.alreadyConnectedOnce = false;\r\n        this.connection = this.createConnection();\r\n        this.listener = this.createListener();\r\n    }\r\n    JhiTrackerService.prototype.connect = function () {\r\n        var _this = this;\r\n        if (this.connectedPromise === null) {\r\n            this.connection = this.createConnection();\r\n        }\r\n        // building absolute path so that websocket doesn't fail when deploying with a context path\r\n        var loc = this.$window.nativeWindow.location;\r\n        var url;\r\n        url = '//' + loc.host + loc.pathname + 'websocket/tracker';\r\n        var authToken = this.authServerProvider.getToken();\r\n        if (authToken) {\r\n            url += '?access_token=' + authToken;\r\n        }\r\n        var socket = new SockJS(url);\r\n        this.stompClient = Stomp.over(socket);\r\n        var headers = {};\r\n        this.stompClient.connect(headers, function () {\r\n            _this.connectedPromise('success');\r\n            _this.connectedPromise = null;\r\n            _this.sendActivity();\r\n            if (!_this.alreadyConnectedOnce) {\r\n                _this.subscription = _this.router.events.subscribe(function (event) {\r\n                    if (event instanceof router_1.NavigationEnd) {\r\n                        _this.sendActivity();\r\n                    }\r\n                });\r\n                _this.alreadyConnectedOnce = true;\r\n            }\r\n        });\r\n    };\r\n    JhiTrackerService.prototype.disconnect = function () {\r\n        if (this.stompClient !== null) {\r\n            this.stompClient.disconnect();\r\n            this.stompClient = null;\r\n        }\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n        this.alreadyConnectedOnce = false;\r\n    };\r\n    JhiTrackerService.prototype.receive = function () {\r\n        return this.listener;\r\n    };\r\n    JhiTrackerService.prototype.sendActivity = function () {\r\n        if (this.stompClient !== null && this.stompClient.connected) {\r\n            this.stompClient.send('/topic/activity', // destination\r\n            JSON.stringify({ page: this.router.routerState.snapshot.url }), // body\r\n            {} // header\r\n            );\r\n        }\r\n    };\r\n    JhiTrackerService.prototype.subscribe = function () {\r\n        var _this = this;\r\n        this.connection.then(function () {\r\n            _this.subscriber = _this.stompClient.subscribe('/topic/tracker', function (data) {\r\n                _this.listenerObserver.next(JSON.parse(data.body));\r\n            });\r\n        });\r\n    };\r\n    JhiTrackerService.prototype.unsubscribe = function () {\r\n        if (this.subscriber !== null) {\r\n            this.subscriber.unsubscribe();\r\n        }\r\n        this.listener = this.createListener();\r\n    };\r\n    JhiTrackerService.prototype.createListener = function () {\r\n        var _this = this;\r\n        return new rxjs_1.Observable(function (observer) {\r\n            _this.listenerObserver = observer;\r\n        });\r\n    };\r\n    JhiTrackerService.prototype.createConnection = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) { return (_this.connectedPromise = resolve); });\r\n    };\r\n    JhiTrackerService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _a || Object, typeof (_b = typeof auth_jwt_service_1.AuthServerProvider !== \"undefined\" && auth_jwt_service_1.AuthServerProvider) === \"function\" && _b || Object, typeof (_c = typeof window_service_1.WindowRef !== \"undefined\" && window_service_1.WindowRef) === \"function\" && _c || Object, typeof (_d = typeof csrf_service_1.CSRFService !== \"undefined\" && csrf_service_1.CSRFService) === \"function\" && _d || Object])\r\n    ], JhiTrackerService);\r\n    return JhiTrackerService;\r\n    var _a, _b, _c, _d;\r\n}());\r\nexports.JhiTrackerService = JhiTrackerService;\r\n",{"version":3,"file":"C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\tracker\\tracker.service.ts","sourceRoot":"","sources":["C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\node_modules\\tslint-loader\\index.js!C:\\Users\\Geoffrey\\Documents\\e-commerce-app\\online-store\\src\\main\\webapp\\app\\core\\tracker\\tracker.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Observable, Observer, Subscription } from 'rxjs';\n\nimport { CSRFService } from '../auth/csrf.service';\nimport { WindowRef } from './window.service';\nimport { AuthServerProvider } from '../auth/auth-jwt.service';\n\nimport * as SockJS from 'sockjs-client';\nimport * as Stomp from 'webstomp-client';\n\n@Injectable({ providedIn: 'root' })\nexport class JhiTrackerService {\n    stompClient = null;\n    subscriber = null;\n    connection: Promise<any>;\n    connectedPromise: any;\n    listener: Observable<any>;\n    listenerObserver: Observer<any>;\n    alreadyConnectedOnce = false;\n    private subscription: Subscription;\n\n    constructor(\n        private router: Router,\n        private authServerProvider: AuthServerProvider,\n        private $window: WindowRef,\n        // tslint:disable-next-line: no-unused-variable\n        private csrfService: CSRFService\n    ) {\n        this.connection = this.createConnection();\n        this.listener = this.createListener();\n    }\n\n    connect() {\n        if (this.connectedPromise === null) {\n            this.connection = this.createConnection();\n        }\n        // building absolute path so that websocket doesn't fail when deploying with a context path\n        const loc = this.$window.nativeWindow.location;\n        let url;\n        url = '//' + loc.host + loc.pathname + 'websocket/tracker';\n        const authToken = this.authServerProvider.getToken();\n        if (authToken) {\n            url += '?access_token=' + authToken;\n        }\n        const socket = new SockJS(url);\n        this.stompClient = Stomp.over(socket);\n        const headers = {};\n        this.stompClient.connect(\n            headers,\n            () => {\n                this.connectedPromise('success');\n                this.connectedPromise = null;\n                this.sendActivity();\n                if (!this.alreadyConnectedOnce) {\n                    this.subscription = this.router.events.subscribe(event => {\n                        if (event instanceof NavigationEnd) {\n                            this.sendActivity();\n                        }\n                    });\n                    this.alreadyConnectedOnce = true;\n                }\n            }\n        );\n    }\n\n    disconnect() {\n        if (this.stompClient !== null) {\n            this.stompClient.disconnect();\n            this.stompClient = null;\n        }\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n        this.alreadyConnectedOnce = false;\n    }\n\n    receive() {\n        return this.listener;\n    }\n\n    sendActivity() {\n        if (this.stompClient !== null && this.stompClient.connected) {\n            this.stompClient.send(\n                '/topic/activity', // destination\n                JSON.stringify({ page: this.router.routerState.snapshot.url }), // body\n                {} // header\n            );\n        }\n    }\n\n    subscribe() {\n        this.connection.then(() => {\n            this.subscriber = this.stompClient.subscribe('/topic/tracker', data => {\n                this.listenerObserver.next(JSON.parse(data.body));\n            });\n        });\n    }\n\n    unsubscribe() {\n        if (this.subscriber !== null) {\n            this.subscriber.unsubscribe();\n        }\n        this.listener = this.createListener();\n    }\n\n    private createListener(): Observable<any> {\n        return new Observable(observer => {\n            this.listenerObserver = observer;\n        });\n    }\n\n    private createConnection(): Promise<any> {\n        return new Promise((resolve, reject) => (this.connectedPromise = resolve));\n    }\n}\n"]}]}